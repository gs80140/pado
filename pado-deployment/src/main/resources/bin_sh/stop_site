#!/bin/bash

# ========================================================================
# Copyright (c) 2013-2015 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

. ./setenv.sh > /dev/null 2>&1
. ./all_env.sh > /dev/null 2>&1
. ./argenv.sh > /dev/null 2>&1

if [ "$HELP" == "true" ]; then
   echo "Usage:"
   echo "   ./stop_site [-grid $GRIDS_OPT] [-site $SITES_OPT] [-locators] [-serial] [-?]"
   echo ""
   echo "  Stops servers in the specified site of the specified grid."
   echo ""
   echo "      -grid      Stops the specified grid. Default: ${GRID_DEFAULT}"
   echo "      -site      Stops the specified site. Default: ${SITE_DEFAULT}"
   echo "      -locators  Stops locators in addition to servers."
   echo "      -serial    Stops servers in serial, one at a time. Default stops"
   echo "                 servers in parallel."
   echo ""
   echo "   Default: ./stop_site -grid $GRID_DEFAULT -site $SITE_DEFAULT"
   echo ""
   exit
fi

. ${GRIDS_DIR}/${GRID}/site_${SITE}.sh > /dev/null 2>&1

SERVER_HOSTS=`getServerHosts`
NUM_HOSTS=0
for i in $SERVER_HOSTS; do
   let NUM_HOSTS=NUM_HOSTS+1
done

let NUM_SERVERS_PER_HOST=NUM_SERVERS/NUM_HOSTS
let NUM_SERVERS=NUM_SERVERS_PER_HOST*NUM_HOSTS

ALL_LOCATORS=`getGemfireLocators`

echo "Shutting down all servers. Please wait..."
echo gemfire -J-Dgemfire.locators=$ALL_LOCATORS shut-down-all
gemfire -J-Dgemfire.locators=$ALL_LOCATORS shut-down-all

# locators
# LocatorArray elements:
#    array[0] LocatorNumber
#    array[1] LocatorHost
#    array[2] LocatorPort
#    array[3] JmxRmiPort
#    array[4] JmxHttpPort
setLineArray $GRIDS_DIR/$GRID/locator_${SITE}.sh

if [ "$LOCATORS" == "true" ]; then
   NUM=1
   for (( i = 1; i <= ${LAST_SERVER_NUM}; i++ ))
   do
      line="${LineArray[$i]}"
      array=($line)
      LOCATOR_HOST=${array[1]}
      echo "-----------------------------------------------------"
      echo "Stop host: $i, grid: $GRID, site: $SITE"
      echo "-----------------------------------------------------"
      ssh -q -n $SSH_USER@$LOCATOR_HOST "cd $REMOTE_BASE_DIR/bin_sh; $COMMAND_PREFIX ./stop_locator_local -num $NUM -grid ${GRID} -site ${SITE}; "
      let NUM=NUM+1
   done
fi

# gfsh's connect takes only one locator. Use gemfire which takes multiple locators to shutdown for now.
#echo "Shutting down all servers. Please wait..."
#if [ "$LOCATORS" == "true" ]; then
#   echo gfsh -e "connect --locator=$ALL_LOCATORS" -e "shutdown --time-out=30 --include-locators=true"
#   gfsh -e "connect --locator=$ALL_LOCATORS" -e "shutdown --time-out=30 --include-locators=true"
#else
#   echo gfsh -e "connect --locator=$ALL_LOCATORS" -e "shutdown --time-out=30"
#   gfsh -e "connect --locator=$ALL_LOCATORS" -e "shutdown --time-out=30"
#fi

disown -a -r
